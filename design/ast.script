
# Brackets = Highest priority

( ... )

# Member Access

a()     # function call; note: no newline may follow between function call headers
a . b   # member access
a .. (b)# quick member navigation
#a ?. b # optional chain = safe member inherit; technically two operations:
        # check validation -> if valid, then do member access

# Logicals

!not        # not
check_if?   # optional chain; for options: if Some

and & and
or | or

# Maths

exp ^ power
mult * iplication
div / ision
rem % ainder

add + ition
sub - traction

# Comparisons

a > b > c
a < b < c
a >= b >= c
a <= b <= c
a == b == c
a != b != c # special: a != c also evaluated

# Assignment

%= ^= *= /= += -=

# Higher Attributes

T a

# Lowest precendence: Comma

a, b

# Lower Attributes

sync a, b, ...