{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Script",
	"patterns": [{
		"include": "#*"
	}],
	"repository": {
		"*": {
			"patterns": [{
				"include": "#comments"
			}, {
				"include": "#strings"
			}, {
				"include": "#numeric"
			}, {
				"include": "#html"
			}, {
				"include": "#attr"
			}, {
				"include": "#symbols"
			}]
		},
		"comments": {
			"patterns": [{
				"begin": "#\\*",
				"end": "\\*#",
				"name": "comment.block.script",
				"patterns": [{
					"include": "#comments"
				}]
			}, {
				"name": "comment.line.script",
				"match": "#.*\n"
			}]
		},
		"strings": {
			"patterns": [{
				"name": "string.quoted.single",
				"begin": "'",
				"end": "\n|(?<!\\\\)'",
				"patterns": [{
					"name": "constant.character.escape.script",
					"match": "\\\\."
				}]
			}, {
				"name": "string.quoted.double",
				"begin": "\"",
				"end": "\n|(?<!\\\\)\"",
				"patterns": [{
					"name": "constant.character.escape.script",
					"match": "\\\\."
				}]
			}, {
				"begin": "`",
				"end": "\n|(?<!\\\\)`",
				"beginCaptures": {
					"0": {
						"name": "string.script"
					}
				},
				"endCaptures": {
					"0": {
						"name": "string.script"
					}
				},
				"patterns": [{
					"begin": "(\\$\\()",
					"end": "(\\))",
					"patterns": [{
						"include": "#*"
					}],
					"beginCaptures": {
						"1": {
							"name": "keyword"
						}
					},
					"endCaptures": {
						"1": {
							"name": "keyword"
						}
					}
				}, {
					"name": "constant.character.escape.script",
					"match": "\\\\."
				}, {
					"match": ".",
					"name": "string.script"
				}]
			}, {
				"begin": "´",
				"end": "\n|(?<!\\\\)´",
				"beginCaptures": {
					"0": {
						"name": "string.regexp.script"
					}
				},
				"endCaptures": {
					"0": {
						"name": "string.regexp.script"
					}
				},
				"patterns": [{
					"name": "constant.regexp.escape.script",
					"match": "\\\\\\w"
				}, {
					"name": "constant.regexp.escape.script",
					"match": "(?<!\\\\)[\\.]"
				}, {
					"begin": "(\\$\\()",
					"end": "(\\))",
					"patterns": [{
						"include": "#*"
					}],
					"beginCaptures": {
						"1": {
							"name": "keyword"
						}
					},
					"endCaptures": {
						"1": {
							"name": "keyword"
						}
					}
				}, {
					"match": "(\\{)(?:(\\d*)|([A-Za-z_][a-zA-Z0-9_]*))?(?:\\-(\\d*)|([A-Za-z_][a-zA-Z0-9_]*))?(\\})",
					"captures": {
						"1": {
							"name": "keyword.script"
						},
						"2": {
							"name": "constant.numeric.script"
						},
						"3": {
							"name": "variable.script"
						},
						"4": {
							"name": "constant.numeric.script"
						},
						"5": {
							"name": "variable.script"
						},
						"6": {
							"name": "keyword.script"
						}
					}
				}, {
					"begin": "\\$\\{",
					"end": "\\}",
					"patterns": [{
						"match": "\\d+",
						"name": "constant.numeric.script"
					}, {
						"match": "\\b[lsb]\\s*:\\s*([A-Za-z_][a-zA-Z0-9_]*)",
						"captures": {
							"1": {
								"name": "keyword.control.script"
							},
							"2": {
								"name": "variable.script"
							}
						}
					}],
					"beginCaptures": {
						"0": {
							"name": "keyword.script"
						}
					},
					"endCaptures": {
						"0": {
							"name": "keyword.script"
						}
					}
				}, {
					"name": "constant.character.escape.script",
					"match": "(?<!\\\\)[\\(\\)\\[\\]\\{\\}\\|\\/]"
				}, {
					"match": "(\\\\).",
					"captures": {
						"0": {
							"name": "constant.regexp.escape.script"
						}
					}
				}, {
					"match": ".",
					"name": "string.regexp.script"
				}]
			}]
		},
		"html": {
			"begin": "<\\/",
			"end": "\\/>",
			"patterns": [{
				"begin": "\\{\\{",
				"end": "\\}\\}",
				"patterns": [{
					"include": "#*"
				}],
				"beginCaptures": {
					"0": {
						"name": "keyword.script"
					}
				},
				"endCaptures": {
					"0": {
						"name": "keyword.script"
					}
				}
			}],
			"beginCaptures": {
				"0": {
					"name": "keyword.script"
				}
			},
			"endCaptures": {
				"0": {
					"name": "keyword.script"
				}
			}
		},
		"numeric": {
			"patterns": [{
				"name": "keyword.operator.new.script",
				"match": "\\bb[A-F0-9]{1,2}\\b"
			}, {
				"name": "constant.numeric.script",
				"match": "(\\-)?(\\.\\d+|\\d+(\\.\\d+)?)"
			}]
		},
		"symbols": {
			"patterns": [{
				"match": "=>",
				"name": "keyword.script"
			}, {
				"name": "keyword.script",
				"match": "\\b(fn|type|ret|next|if|el|case|for|throw|proof|T|V|_)(:[A-Za-z_0-9]*)*\\b",
				"captures": {
					"1": {
						"name": "keyword.control.script"
					}
				}
			}, {
				"name": "keyword.script",
				"match": "\\b(use|self|super|in|true|false|be)(:[A-Za-z_][A-Za-z_0-9]*)*\\b"
			}, {
				"name": "keyword.asm",
				"match": "\\b[ODITSZAPC]F\\b"
			}, {
				"name": "variable.other.constant.script",
				"match": "\\b(document|window|process)\\b"
			}, {
				"name": "support.type.script",
				"match": "\\b(u?int|u?num|str|char|bool|byte|reg|func|code)\\b"
			}, {
				"match": "([A-Za-z_][a-zA-Z0-9_]*)(\\-(for|exit|ret)\\b|\\-\\-)",
				"captures": {
					"1": {
						"name": "keyword.script"
					},
					"3": {
						"name": "keyword.control.script"
					}
				}
			}, {
				"name": "support.type.script",
				"match": "(_)?[A-Z][a-zA-Z0-9_]*",
				"captures": {
					"1": {
						"name": "keyword.script"
					}
				}
			}, {
				"name": "variable.script",
				"match": "(_)?[a-z][a-zA-Z0-9_]*",
				"captures": {
					"1": {
						"name": "keyword.script"
					}
				}
			}]
		},
		"attr": {
			"begin": "(\\$)\\[",
			"end": "\\]",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.script"
				}
			},
			"patterns": [{
				"include": "#comments"
			}, {
				"include": "#strings"
			}, {
				"include": "#numeric"
			}, {
				"match": "\\b(prim|opt|if|trust|ret)\\b",
				"name": "keyword.control.script"
			}, {
				"match": "\\b[A-Za-z_0-9\\-]+\\b",
				"name": "keyword.script"
			}, {
				"begin": "\\(",
				"end": "\\)",
				"patterns": [{
					"include": "#*"
				}]
			}]
		}
	},
	"scopeName": "source.script"
}